# Node.js React Web App to Linux on Azure
# Build a Node.js React app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'c59c4ee5-1317-4f87-8802-1e382f5ce256'

  # Web app name
  webAppName: 'Dimitar-Shikrenov'

  # Environment name
  environmentName: 'Dimitar-Shikrenov'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: |
        npm install -g npm@latest
      displayName: 'Install latest npm'

    - script: |
        npm ci
        npm run build
      displayName: 'Install dependencies and build'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - publish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      artifact: 'drop'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
            displayName: 'Download Build Artifact'

          - task: ExtractFiles@1
            displayName: 'Extract files'
            inputs:
              archiveFilePatterns: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              destinationFolder: '$(System.DefaultWorkingDirectory)/extracted_files'
              cleanDestinationFolder: true

          - script: |
              cd $(System.DefaultWorkingDirectory)/extracted_files
              npm ci --production
              npm run build --if-present
            displayName: 'Install dependencies and build in extracted directory'

          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: $(webAppName)'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: 'webAppLinux'
              WebAppName: $(webAppName)
              packageForLinux: '$(System.DefaultWorkingDirectory)/extracted_files'
              RuntimeStack: 'NODE|18-lts'
              StartupCommand: 'npm start'
