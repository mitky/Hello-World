# Node.js React Web App to Linux on Azure
# Build a Node.js React app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'c59c4ee5-1317-4f87-8802-1e382f5ce256'

  # Web app name
  webAppName: 'Dimitar-Shikrenov'

  # Environment name
  environmentName: 'Dimitar-Shikrenov'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Test
  displayName: Test stage
  jobs:
  - job: Test
    displayName: Run Tests
    pool:
      vmImage: $(vmImageName)

    steps:
    - script: |
        echo "Installing Node.js version 18..."
        # Setup Node.js version 18
        sudo apt-get install -y nodejs
        sudo apt-get install -y npm
        sudo npm cache clean -f
        sudo npm install -g n
        sudo n 18.0.0
        node -v
        npm -v
      displayName: 'Install Node.js'

    - script: |
        echo "Installing dependencies..."
        npm install
        npm cache clean --force  # Clean npm cache
        npm install react-scripts@latest --save-dev  # Reinstall react-scripts
      displayName: 'Install dependencies'

    - script: |
        echo "Restoring dependencies..."
        npm ci # Use `npm ci` to install dependencies from `package-lock.json`
      displayName: 'Restore dependencies'

    - script: |
        echo "Running tests..."
        CI=true npm test -- --forceExit --detectOpenHandles || exit 1
      displayName: 'Execute tests'

- stage: Build
  displayName: Build stage
  dependsOn: Test
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            displayName: 'Azure App Service Deploy: Dimitar-Shikrenov'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              WebAppName: $(webAppName)
              packageForLinux: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              RuntimeStack: 'NODE|18-lts'
              StartupCommand: 'npm run start'
              ScriptType: 'Inline Script'
              InlineScript: |
                npm install
                npm run build --if-present
